<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="neueduexam.dao.homeworkMapper" >
  <resultMap id="BaseResultMap" type="neueduexam.entity.homework" >
    <id column="hwid" property="hwid" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="groupid" property="groupid" jdbcType="INTEGER" />
    <result column="hwdate" property="hwdate" jdbcType="VARCHAR" />
    <result column="other1" property="other1" jdbcType="VARCHAR" />
    <result column="other2" property="other2" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    hwid, content, groupid, hwdate, other1, other2
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="neueduexam.entity.homeworkExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from homework
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from homework
    where hwid = #{hwid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from homework
    where hwid = #{hwid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="neueduexam.entity.homeworkExample" >
    delete from homework
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="neueduexam.entity.homework" >
    insert into homework (hwid, content, groupid, 
      hwdate, other1, other2
      )
    values (#{hwid,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{groupid,jdbcType=INTEGER}, 
      #{hwdate,jdbcType=VARCHAR}, #{other1,jdbcType=VARCHAR}, #{other2,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="neueduexam.entity.homework" >
    insert into homework
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="hwid != null" >
        hwid,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="groupid != null" >
        groupid,
      </if>
      <if test="hwdate != null" >
        hwdate,
      </if>
      <if test="other1 != null" >
        other1,
      </if>
      <if test="other2 != null" >
        other2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="hwid != null" >
        #{hwid,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="groupid != null" >
        #{groupid,jdbcType=INTEGER},
      </if>
      <if test="hwdate != null" >
        #{hwdate,jdbcType=VARCHAR},
      </if>
      <if test="other1 != null" >
        #{other1,jdbcType=VARCHAR},
      </if>
      <if test="other2 != null" >
        #{other2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="neueduexam.entity.homeworkExample" resultType="java.lang.Integer" >
    select count(*) from homework
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update homework
    <set >
      <if test="record.hwid != null" >
        hwid = #{record.hwid,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.groupid != null" >
        groupid = #{record.groupid,jdbcType=INTEGER},
      </if>
      <if test="record.hwdate != null" >
        hwdate = #{record.hwdate,jdbcType=VARCHAR},
      </if>
      <if test="record.other1 != null" >
        other1 = #{record.other1,jdbcType=VARCHAR},
      </if>
      <if test="record.other2 != null" >
        other2 = #{record.other2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update homework
    set hwid = #{record.hwid,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      groupid = #{record.groupid,jdbcType=INTEGER},
      hwdate = #{record.hwdate,jdbcType=VARCHAR},
      other1 = #{record.other1,jdbcType=VARCHAR},
      other2 = #{record.other2,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="neueduexam.entity.homework" >
    update homework
    <set >
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="groupid != null" >
        groupid = #{groupid,jdbcType=INTEGER},
      </if>
      <if test="hwdate != null" >
        hwdate = #{hwdate,jdbcType=VARCHAR},
      </if>
      <if test="other1 != null" >
        other1 = #{other1,jdbcType=VARCHAR},
      </if>
      <if test="other2 != null" >
        other2 = #{other2,jdbcType=VARCHAR},
      </if>
    </set>
    where hwid = #{hwid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="neueduexam.entity.homework" >
    update homework
    set content = #{content,jdbcType=VARCHAR},
      groupid = #{groupid,jdbcType=INTEGER},
      hwdate = #{hwdate,jdbcType=VARCHAR},
      other1 = #{other1,jdbcType=VARCHAR},
      other2 = #{other2,jdbcType=VARCHAR}
    where hwid = #{hwid,jdbcType=INTEGER}
  </update>
</mapper>